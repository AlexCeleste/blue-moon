
TODO (minimal, for preview):

- metamethod lookup needs to be implemented
  - setmetatable & getmetatable
- operators and instructions need to be filled out
  - instructions need type checks
- basic invocation framework with native exception handling
- basic library needs to be written
- eden gc needs to be implemented


TODO ("working", to call it implemented):

- clean up VM's include-based module structure (reflective instantiator?)
  - split the JIT and operator modules
- code buffer allocation needs to be completed
- generational gc needs to be implemented
  - allocator needs to be tidied up
  - remaining object layouts need to be specified and stuck to
- perror needs to be implemented
- need to be able to create and fill out Lua objects/values from native
  - load native objects as Lua objects using conversion-chaining
  - add type checks to value methods
- standard library needs to be written
- coroutines need to be designed and implemented
- need to fix (completely rewrite) the MOV-optimizer


WISHLIST (will do after release 0.1):

- bitwise operators from 5.3

- general code cleanup (esp. in JIT)
- replace conv() calls with something faster

- remove table init size limit (by flattening stack)
- avoid copy on function call
- remove limit on return values
- remove limit on local/temp variables
- remove stack effect of condition in if/while
- preallocate array/hash areas for immediate tables
- faster table query with inline caching on field accesses
- reseat native stack to use native calls for opc.CALL
- optimize string indexing to field access

- inline more operations
- implement some operations in assembly and import

- string interning?
